// Generated by CoffeeScript 1.3.3
(function() {
  var cheerio, extractLinks, normalizeLink, url;

  cheerio = require('cheerio');

  url = require('url');

  extractLinks = function(pageUrl, pageHtml, callback) {
    var $, links, parsedUrl;
    $ = cheerio.load(pageHtml);
    links = [];
    parsedUrl = url.parse(pageUrl);
    $('a').each(function(i, el) {
      var absoluteUrl, link;
      absoluteUrl = normalizeLink(parsedUrl, $(el).attr('href'));
      link = {};
      link.text = $(el).text();
      link.html = $(el).html();
      link.href = $(el).attr('href');
      link.element = el;
      link.link = absoluteUrl;
      return links.push(link);
    });
    return callback($, links);
  };

  normalizeLink = function(parsedUrl, scrapedHref) {
    var pos, scrapedUrl, surl;
    if (scrapedHref.indexOf('javascript:') === 0) {
      return null;
    }
    if (scrapedHref.indexOf('#') === 0) {
      return null;
    }
    scrapedUrl = url.parse(scrapedHref);
    if (scrapedUrl.host != null) {
      return scrapedHref;
    } else {
      if (scrapedHref.indexOf('/') === 0) {
        return parsedUrl.protocol + '//' + parsedUrl.host + scrapedHref;
      } else {
        if (scrapedHref.indexOf('(') > 0 && scrapedHref.indexOf(')') > 0) {
          return null;
        } else {
          pos = parsedUrl.href.lastIndexOf("/");
          surl = "";
          if (pos >= 0) {
            surl = parsedUrl.href.substring(0, pos + 1);
            return surl + scrapedHref;
          } else {
            return parsedUrl.href + "/" + scrapedHref;
          }
        }
      }
    }
    return null;
  };

  module.exports = extractLinks;

}).call(this);
